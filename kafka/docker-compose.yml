version: "3.3"
services:
  zoo:
    container_name: zookeeper
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo
    networks:
      - kafkanetwork
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - zoodata:/data
      - zoologs:/datalog

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka
    networks:
      - kafkanetwork
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafkadata:/var/lib/kafka/data
    depends_on:
      - zoo

  kafka-schema-registry:
    container_name: kafka-schema-registry
    image: confluentinc/cp-schema-registry:5.2.1
    hostname: kafka-schema-registry
    networks:
      - kafkanetwork
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo
      - kafka

  schema-registry-ui:
    container_name: schema-registry-ui
    image: landoop/schema-registry-ui:0.9.4
    hostname: kafka-schema-registry-ui
    networks:
      - kafkanetwork
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry

  kafka-rest-proxy:
    container_name: kafka-rest-proxy
    image: confluentinc/cp-kafka-rest:5.2.1
    hostname: kafka-rest-proxy
    networks:
      - kafkanetwork
    ports:
      - "8082:8082"
    environment:
      # KAFKA_REST_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
    depends_on:
      - zoo
      - kafka
      - kafka-schema-registry

  kafka-topics-ui:
    container_name: kafka-topics-ui
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    networks:
      - kafkanetwork
    ports:
      - "8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - zoo
      - kafka
      - kafka-schema-registry
      - kafka-rest-proxy

  zoonavigator-api:
    container_name: zoonavigator-api
    image: elkozmon/zoonavigator-api:0.5.1
    hostname: zoonavigator-api
    networks:
      - kafkanetwork
    environment:
      SERVER_HTTP_PORT: 9000
    depends_on:
      - zoo

  zoonavigator-web:
    container_name: zoonavigator-web
    image: elkozmon/zoonavigator-web:0.5.1
    ports:
      - "8004:8000"
    environment:
      API_HOST: "zoonavigator-api"
      API_PORT: 9000
    networks:
      - kafkanetwork
    depends_on:
      - zoonavigator-api

networks:
  kafkanetwork:
    driver: bridge

volumes:
  data01:
    driver: local
  zoodata:
  zoologs:
  kafkadata:
  data07:
    driver: local
